plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.diffplug.spotless' version '6.16.0'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    namespace 'com.cmput301w23t09.qrhunter'
    compileSdk 33

    defaultConfig {
        applicationId "com.cmput301w23t09.qrhunter"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

// Javadoc Build Script
// Originally From: https://stackoverflow.com/a/29164335 (2015-03-20)
// By: Fred (https://stackoverflow.com/users/344487/fred)
// Edited Version From: https://rick38yip.medium.com/error-when-android-studio-generating-javadoc-with-gradle-script-ee5f9b16e75d
// By: Rick_HK (https://twitter.com/rick3817)
// License: CC BY-SA
android.applicationVariants.all { variant ->
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        destinationDir = new File("${projectDir}/../doc")
        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        doFirst {
            classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        }
        options.links("http://docs.oracle.com/javase/7/docs/api/")
        options.links("http://d.android.com/reference/")
        exclude "**/BuildConfig.java"
    }
}

// We use spotless to enforce code style automatically (Google Java style guide)
// https://github.com/diffplug/spotless
spotless {
    java {
        target 'src/*/java/**/*.java'
        removeUnusedImports()

        // Use Google Java style
        googleJavaFormat()
        formatAnnotations()  // fixes formatting of type annotations
    }
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:31.2.2')
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
<<<<<<< HEAD
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
=======

    // CameraX Library
    def camerax_version = "1.1.0-beta01"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    // Google's MLKit Library for QR Scanning
    implementation 'com.google.mlkit:barcode-scanning:17.0.3'
>>>>>>> 74e5e19455aaa369be2e44897a1bb590e9e8be1b
}